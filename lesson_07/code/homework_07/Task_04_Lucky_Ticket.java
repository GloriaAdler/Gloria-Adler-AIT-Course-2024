package homework_07;

import java.util.Scanner;

//Вводится шестизначное число (номер автобусного билета).
//Определите, является ли этот билет "счастливым" (сумма первых трех цифр равна сумме трех последних цифр).
public class Task_04_Lucky_Ticket {
    public static void main(String[] args) {
        //Нужен Scanner для получения информации с номером билета от пользователя через клаву.
        Scanner scanner = new Scanner(System.in);
        // Просим ввести номер билета
        System.out.println("Input ticket number: ");
        int ticketNumber = scanner.nextInt();//int не распознает цифры с 0, т.е. при вводе if ...<000001, не выдает ошибку на вводе менее 6 цифр. Если указать 100000 - тогда ошибку выдаст, но серия начинающаяся с 0 не будет расмотрена, для расмотрения серии с 0, нужно использовать тип, который читает строки (это есть в уроке 08).

        //нужно проверить, что число введено верно, т.е. 6 знаков
        if (ticketNumber < 000001 || ticketNumber >999999){ // || - или, если первый операнд истина, то второй не проверяется, т.к. результат истина
            System.out.printf("Wrong input!");// если пользователь введёт не 6 цифр, программа выдаст ошибку ввода
        }else {
            //Нужно разбить билет на две половины!!!
            int firstHalf = ticketNumber / 1000;      // Первые три цифры: напр. 123123/100=123,123 => т.е. до остатка будет первая половина, а остаток будет второй половиной.
            int secondHalf = ticketNumber % 1000;     // Последние три цифры.

            // Теперь нужно посчитать получившиеся суммы цифр для первой и второй половин
            int sumFirstHalf = sumOfDigits(firstHalf);
            int sumSecondHalf = sumOfDigits(secondHalf);

            // Проверяем, является ли билет счастливым
            if (sumFirstHalf == sumSecondHalf) {// == проверка равенства
                System.out.println("Lucky ticket!!!");
            } else {
                System.out.println("Not a lucky ticket.");
            }
        }
    }
    // Метод для подсчета суммы цифр введенного числа, после того как его разбили на 2 части
    private static int sumOfDigits(int number) {
        int sum = 0; // переменная, в которой будет храниться сумма всех цифр числа. На начальном этапе сумма равна нулю.
        while (number > 0) {//введенное число должно быть больше 0
            sum += number % 10;  //последняя цифра, остаток после деления на 10, который потом нужно будет прибавить к целому числу
            number=number/10;        //или можно записать number=number/10 как number /= 10; деление без остатка, т.е. только целые числа
        }
        return sum;
    }


}

